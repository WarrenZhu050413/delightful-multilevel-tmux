#!/bin/bash
# tmux-start-level - Start tmux session with level identity (9-level system)
# Usage: tmux-start-level <1-9> [tmux-new-session-options...]

set -euo pipefail

show_help() {
    cat << 'EOF'
tmux-start-level - Start tmux session with level identity (9-level system)

USAGE:
    tmux-start-level <level> [tmux-options...]

ARGUMENTS:
    level               Session identity level (1-9)
    tmux-options       Any flags supported by 'tmux new-session'

EXAMPLES:
    tmux-start-level 1                          # Basic Level 1 session
    tmux-start-level 2 -s project               # Named Level 2 session  
    tmux-start-level 3 -s work -c ~/projects    # Level 3, named, specific directory
    tmux-start-level 2 -d -s background         # Level 2, detached session
    tmux-start-level 1 -A -s workspace          # Level 1, attach if exists

NOTES:
    - Sets @session_level variable for session identity
    - All tmux new-session options are supported and passed through
    - Sessions start in passthrough mode, use navigation to activate
    - Use Ctrl+X !@#$%^&*( to navigate to levels 1-9

SEE ALSO:
    tmux-goto-level     Switch navigation to specific level
    tmux-level-help     Show navigation commands
    tmux new-session    Native tmux session creation
EOF
}

# Show help
if [[ ${1:-} == "--help" || ${1:-} == "-h" ]]; then
    show_help
    exit 0
fi

# Validate arguments
if [[ $# -eq 0 ]]; then
    echo "❌ Error: Level argument required"
    echo ""
    show_help
    exit 1
fi

level=$1
shift  # Remove level from arguments

# Validate level is 1-9
case "$level" in
    [1-9]) ;;
    *) echo "❌ Error: Level must be 1-9, got '$level'"
       echo ""
       show_help
       exit 1 ;;
esac

# Check if tmux is available
if ! command -v tmux &> /dev/null; then
    echo "❌ Error: tmux is not installed or not in PATH"
    exit 1
fi

# Visual feedback
echo "🚀 Starting Level $level tmux session..."

# Get active level for configuration
current_active_level=$(tmux show-option -gv @active_level 2>/dev/null || echo "1")

if [[ $level -eq $current_active_level ]]; then
    echo "✅ Creating Level $level session (ACTIVE - matches current level)"
else
    echo "✅ Creating Level $level session (passthrough mode)"
fi

# Start session directly (tmux handles nesting automatically)
if [[ $level -eq $current_active_level ]]; then
    exec tmux new-session "$@" \; \
        set-option @session_level "$level" \; \
        set-option status-right "#(TMUX_SESSION=#S ~/.local/bin/tmux-multilevel/tmux-level-status --visual) #{?client_prefix,[ACTIVE],} | %l:%M%p" \; \
        set-option prefix C-x \; \
        set-option key-table root
else
    exec tmux new-session "$@" \; \
        set-option @session_level "$level" \; \
        set-option status-right "#(TMUX_SESSION=#S ~/.local/bin/tmux-multilevel/tmux-level-status --visual) #{?client_prefix,[ACTIVE],} | %l:%M%p" \; \
        set-option prefix None \; \
        set-option key-table off
fi